//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameLand.GameLandWebServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://gameland.com/", ConfigurationName="GameLandWebServiceRef.GameServiceSoap")]
    public interface GameServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/RegisterUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RegisterUser(string name, string ic, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/RegisterUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RegisterUserAsync(string name, string ic, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/LoginUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LoginUser(string ic, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/LoginUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginUserAsync(string ic, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/AdminLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AdminLogin(string staffID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/AdminLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AdminLoginAsync(string staffID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/CalculatePenalty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double CalculatePenalty(System.DateTime borrowDate, System.DateTime returnDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/CalculatePenalty", ReplyAction="*")]
        System.Threading.Tasks.Task<double> CalculatePenaltyAsync(System.DateTime borrowDate, System.DateTime returnDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/BorrowItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BorrowItem(string userIC, string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/BorrowItem", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BorrowItemAsync(string userIC, string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/ReturnItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReturnItem(int recordId, string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/ReturnItem", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ReturnItemAsync(int recordId, string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/CheckConnectionString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckConnectionString();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gameland.com/CheckConnectionString", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckConnectionStringAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GameServiceSoapChannel : GameLand.GameLandWebServiceRef.GameServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceSoapClient : System.ServiceModel.ClientBase<GameLand.GameLandWebServiceRef.GameServiceSoap>, GameLand.GameLandWebServiceRef.GameServiceSoap {
        
        public GameServiceSoapClient() {
        }
        
        public GameServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RegisterUser(string name, string ic, string password) {
            return base.Channel.RegisterUser(name, ic, password);
        }
        
        public System.Threading.Tasks.Task<string> RegisterUserAsync(string name, string ic, string password) {
            return base.Channel.RegisterUserAsync(name, ic, password);
        }
        
        public string LoginUser(string ic, string password) {
            return base.Channel.LoginUser(ic, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginUserAsync(string ic, string password) {
            return base.Channel.LoginUserAsync(ic, password);
        }
        
        public string AdminLogin(string staffID, string password) {
            return base.Channel.AdminLogin(staffID, password);
        }
        
        public System.Threading.Tasks.Task<string> AdminLoginAsync(string staffID, string password) {
            return base.Channel.AdminLoginAsync(staffID, password);
        }
        
        public double CalculatePenalty(System.DateTime borrowDate, System.DateTime returnDate) {
            return base.Channel.CalculatePenalty(borrowDate, returnDate);
        }
        
        public System.Threading.Tasks.Task<double> CalculatePenaltyAsync(System.DateTime borrowDate, System.DateTime returnDate) {
            return base.Channel.CalculatePenaltyAsync(borrowDate, returnDate);
        }
        
        public string BorrowItem(string userIC, string itemId) {
            return base.Channel.BorrowItem(userIC, itemId);
        }
        
        public System.Threading.Tasks.Task<string> BorrowItemAsync(string userIC, string itemId) {
            return base.Channel.BorrowItemAsync(userIC, itemId);
        }
        
        public string ReturnItem(int recordId, string itemId) {
            return base.Channel.ReturnItem(recordId, itemId);
        }
        
        public System.Threading.Tasks.Task<string> ReturnItemAsync(int recordId, string itemId) {
            return base.Channel.ReturnItemAsync(recordId, itemId);
        }
        
        public string CheckConnectionString() {
            return base.Channel.CheckConnectionString();
        }
        
        public System.Threading.Tasks.Task<string> CheckConnectionStringAsync() {
            return base.Channel.CheckConnectionStringAsync();
        }
    }
}
